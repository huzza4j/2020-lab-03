<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>junit4j</artifactId>
        <groupId>com.xlaser.junit</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>junit5</artifactId>
    <packaging>pom</packaging>

    <properties>
        <junit-jupiter.version>5.5.2</junit-jupiter.version>
        <junit-vintage.version>5.5.2</junit-vintage.version>
        <junit-platform.version>1.5.2</junit-platform.version>
        <allure-junit5.version>2.6.0</allure-junit5.version>
        <allure-maven.version>2.8</allure-maven.version>
        <hamcrest.version>1.3</hamcrest.version>
        <mockito-junit-jupiter.version>2.19.0</mockito-junit-jupiter.version>
        <rest-assured.version>3.0.3</rest-assured.version>
        <wiremock.version>2.8.0</wiremock.version>
        <retrofit.version>2.3.0</retrofit.version>
    </properties>

    <modules>
        <module>allure</module>
        <module>cucumber2</module>
        <module>injection</module>
        <module>dynamic</module>
        <module>extension</module>
        <module>platform</module>
        <module>launcher</module>
        <module>annotation</module>
        <module>mockito2</module>
        <module>nested</module>
        <module>parameterized</module>
        <module>base2</module>
        <module>rest-assured</module>
        <module>spring2</module>
        <module>springboot-rest</module>
        <module>springboot-mockito</module>
        <module>wiremock</module>
    </modules>

    <dependencyManagement>
        <dependencies>

            <!--junit5-->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-migrationsupport</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-runner</artifactId>
                <version>${junit-platform.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit-platform.version}</version>
                <scope>test</scope>
            </dependency>

            <!--allure自动生成测试报告tool-->
            <dependency>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-junit5</artifactId>
                <version>${allure-junit5.version}</version>
                <scope>test</scope>
            </dependency>

            <!--hamcrest用于编写匹配对象的框架,允许以声明方式定义“匹配规则”-->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <!--mockito-->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito-junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!--rest assured-->
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest-assured.version}</version>
                <scope>test</scope>
            </dependency>

            <!--wiremock-->
            <!--对依赖接口构建Mock Service,模拟不同场景-->
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>adapter-rxjava</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-gson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <!--mvn test allure:serve-->
            <!--通过mvn命令启动服务,查看allure可视化界面-->
            <plugins>
                <plugin>
                    <groupId>io.qameta.allure</groupId>
                    <artifactId>allure-maven</artifactId>
                    <version>${allure-maven.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>